#version 450
layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(push_constant) uniform PushConsts {
    uint M;
    uint N;
    uint K;
    uint transX;
    uint transY;
} pc;

layout(set = 0, binding = 0) buffer A { float a[]; };
layout(set = 0, binding = 1) buffer B { float b[]; };
layout(set = 0, binding = 2) buffer C { float c[]; };

void main() {
    uint row = gl_GlobalInvocationID.x;
    uint col = gl_GlobalInvocationID.y;

    if (row >= pc.M || col >= pc.N) return;

    float sum = 0.0;
    for (uint i = 0u; i < pc.K; i++) {
        // 计算A的下标
        // 若transX=0, 正常访问 a[row * K + i]
        // 若transX=1, 转置后访问 a[i * M + row]
        uint a_idx = (pc.transX == 0) ? (row * pc.K + i) : (i * pc.M + row);

        // 计算B的下标
        // 若transY=0, 正常访问 b[i * N + col]
        // 若transY=1, 转置后访问 b[col * K + i]
        uint b_idx = (pc.transY == 0) ? (i * pc.N + col) : (col * pc.K + i);

        sum += a[a_idx] * b[b_idx];
    }

    c[row * pc.N + col] = sum;
}